{"sources": {"/code/@openzeppelin/contracts/math/SafeMath.sol": {"AST": {"absolutePath": "/code/@openzeppelin/contracts/math/SafeMath.sol", "exportedSymbols": {"SafeMath": [343]}, "id": 344, "nodeType": "SourceUnit", "nodes": [{"id": 158, "literals": ["solidity", "^", "0.6", ".0"], "nodeType": "PragmaDirective", "src": "0:23:0"}, {"abstract": false, "baseContracts": [], "contractDependencies": [], "contractKind": "library", "documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.", "fullyImplemented": true, "id": 343, "linearizedBaseContracts": [343], "name": "SafeMath", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 182, "nodeType": "Block", "src": "901:109:0", "statements": [{"assignments": [168], "declarations": [{"constant": false, "id": 168, "name": "c", "nodeType": "VariableDeclaration", "overrides": null, "scope": 182, "src": "911:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 167, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "911:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 172, "initialValue": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 171, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 169, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 160, "src": "923:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"argumentTypes": null, "id": 170, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 162, "src": "927:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "923:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "911:17:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 176, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 174, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 168, "src": "946:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"argumentTypes": null, "id": 175, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 160, "src": "951:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "946:6:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77", "id": 177, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "954:29:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a", "typeString": "literal_string \"SafeMath: addition overflow\""}, "value": "SafeMath: addition overflow"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a", "typeString": "literal_string \"SafeMath: addition overflow\""}], "id": 173, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [361, 362], "referencedDeclaration": 362, "src": "938:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 178, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "938:46:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 179, "nodeType": "ExpressionStatement", "src": "938:46:0"}, {"expression": {"argumentTypes": null, "id": 180, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 168, "src": "1002:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 166, "id": 181, "nodeType": "Return", "src": "995:8:0"}]}, "documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.", "id": 183, "implemented": true, "kind": "function", "modifiers": [], "name": "add", "nodeType": "FunctionDefinition", "overrides": null, "parameters": {"id": 163, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 160, "name": "a", "nodeType": "VariableDeclaration", "overrides": null, "scope": 183, "src": "847:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 159, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "847:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 162, "name": "b", "nodeType": "VariableDeclaration", "overrides": null, "scope": 183, "src": "858:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 161, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "858:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "846:22:0"}, "returnParameters": {"id": 166, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 165, "name": "", "nodeType": "VariableDeclaration", "overrides": null, "scope": 183, "src": "892:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 164, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "892:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "891:9:0"}, "scope": 343, "src": "834:176:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 198, "nodeType": "Block", "src": "1341:67:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 193, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 185, "src": "1362:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"argumentTypes": null, "id": 194, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 187, "src": "1365:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"argumentTypes": null, "hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77", "id": 195, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1368:32:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862", "typeString": "literal_string \"SafeMath: subtraction overflow\""}, "value": "SafeMath: subtraction overflow"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862", "typeString": "literal_string \"SafeMath: subtraction overflow\""}], "id": 192, "name": "sub", "nodeType": "Identifier", "overloadedDeclarations": [199, 226], "referencedDeclaration": 226, "src": "1358:3:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"}}, "id": 196, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1358:43:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 191, "id": 197, "nodeType": "Return", "src": "1351:50:0"}]}, "documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.", "id": 199, "implemented": true, "kind": "function", "modifiers": [], "name": "sub", "nodeType": "FunctionDefinition", "overrides": null, "parameters": {"id": 188, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 185, "name": "a", "nodeType": "VariableDeclaration", "overrides": null, "scope": 199, "src": "1287:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 184, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1287:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 187, "name": "b", "nodeType": "VariableDeclaration", "overrides": null, "scope": 199, "src": "1298:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 186, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1298:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "1286:22:0"}, "returnParameters": {"id": 191, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 190, "name": "", "nodeType": "VariableDeclaration", "overrides": null, "scope": 199, "src": "1332:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 189, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1332:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "1331:9:0"}, "scope": 343, "src": "1274:134:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 225, "nodeType": "Block", "src": "1787:92:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 213, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 211, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 203, "src": "1805:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"argumentTypes": null, "id": 212, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 201, "src": "1810:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1805:6:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "id": 214, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 205, "src": "1813:12:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 210, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [361, 362], "referencedDeclaration": 362, "src": "1797:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 215, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1797:29:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 216, "nodeType": "ExpressionStatement", "src": "1797:29:0"}, {"assignments": [218], "declarations": [{"constant": false, "id": 218, "name": "c", "nodeType": "VariableDeclaration", "overrides": null, "scope": 225, "src": "1836:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 217, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1836:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 222, "initialValue": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 221, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 219, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 201, "src": "1848:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"argumentTypes": null, "id": 220, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 203, "src": "1852:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1848:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "1836:17:0"}, {"expression": {"argumentTypes": null, "id": 223, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 218, "src": "1871:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 209, "id": 224, "nodeType": "Return", "src": "1864:8:0"}]}, "documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.", "id": 226, "implemented": true, "kind": "function", "modifiers": [], "name": "sub", "nodeType": "FunctionDefinition", "overrides": null, "parameters": {"id": 206, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 201, "name": "a", "nodeType": "VariableDeclaration", "overrides": null, "scope": 226, "src": "1705:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 200, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1705:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 203, "name": "b", "nodeType": "VariableDeclaration", "overrides": null, "scope": 226, "src": "1716:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 202, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1716:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 205, "name": "errorMessage", "nodeType": "VariableDeclaration", "overrides": null, "scope": 226, "src": "1727:26:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 204, "name": "string", "nodeType": "ElementaryTypeName", "src": "1727:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}], "src": "1704:50:0"}, "returnParameters": {"id": 209, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 208, "name": "", "nodeType": "VariableDeclaration", "overrides": null, "scope": 226, "src": "1778:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 207, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1778:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "1777:9:0"}, "scope": 343, "src": "1692:187:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 259, "nodeType": "Block", "src": "2186:392:0", "statements": [{"condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 237, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 235, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 228, "src": "2418:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 236, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2423:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2418:6:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": null, "id": 241, "nodeType": "IfStatement", "src": "2414:45:0", "trueBody": {"id": 240, "nodeType": "Block", "src": "2426:33:0", "statements": [{"expression": {"argumentTypes": null, "hexValue": "30", "id": 238, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2447:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "functionReturnParameters": 234, "id": 239, "nodeType": "Return", "src": "2440:8:0"}]}}, {"assignments": [243], "declarations": [{"constant": false, "id": 243, "name": "c", "nodeType": "VariableDeclaration", "overrides": null, "scope": 259, "src": "2469:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 242, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2469:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 247, "initialValue": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 246, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 244, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 228, "src": "2481:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"argumentTypes": null, "id": 245, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 230, "src": "2485:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2481:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2469:17:0"}, {"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 253, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 251, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 249, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 243, "src": "2504:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"argumentTypes": null, "id": 250, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 228, "src": "2508:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2504:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "id": 252, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 230, "src": "2513:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2504:10:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77", "id": 254, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2516:35:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3", "typeString": "literal_string \"SafeMath: multiplication overflow\""}, "value": "SafeMath: multiplication overflow"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3", "typeString": "literal_string \"SafeMath: multiplication overflow\""}], "id": 248, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [361, 362], "referencedDeclaration": 362, "src": "2496:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 255, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2496:56:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 256, "nodeType": "ExpressionStatement", "src": "2496:56:0"}, {"expression": {"argumentTypes": null, "id": 257, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 243, "src": "2570:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 234, "id": 258, "nodeType": "Return", "src": "2563:8:0"}]}, "documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.", "id": 260, "implemented": true, "kind": "function", "modifiers": [], "name": "mul", "nodeType": "FunctionDefinition", "overrides": null, "parameters": {"id": 231, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 228, "name": "a", "nodeType": "VariableDeclaration", "overrides": null, "scope": 260, "src": "2132:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 227, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2132:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 230, "name": "b", "nodeType": "VariableDeclaration", "overrides": null, "scope": 260, "src": "2143:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 229, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2143:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "2131:22:0"}, "returnParameters": {"id": 234, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 233, "name": "", "nodeType": "VariableDeclaration", "overrides": null, "scope": 260, "src": "2177:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 232, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2177:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "2176:9:0"}, "scope": 343, "src": "2119:459:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 275, "nodeType": "Block", "src": "3100:63:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 270, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 262, "src": "3121:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"argumentTypes": null, "id": 271, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 264, "src": "3124:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"argumentTypes": null, "hexValue": "536166654d6174683a206469766973696f6e206279207a65726f", "id": 272, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3127:28:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f", "typeString": "literal_string \"SafeMath: division by zero\""}, "value": "SafeMath: division by zero"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f", "typeString": "literal_string \"SafeMath: division by zero\""}], "id": 269, "name": "div", "nodeType": "Identifier", "overloadedDeclarations": [276, 303], "referencedDeclaration": 303, "src": "3117:3:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"}}, "id": 273, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3117:39:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 268, "id": 274, "nodeType": "Return", "src": "3110:46:0"}]}, "documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.", "id": 276, "implemented": true, "kind": "function", "modifiers": [], "name": "div", "nodeType": "FunctionDefinition", "overrides": null, "parameters": {"id": 265, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 262, "name": "a", "nodeType": "VariableDeclaration", "overrides": null, "scope": 276, "src": "3046:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 261, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3046:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 264, "name": "b", "nodeType": "VariableDeclaration", "overrides": null, "scope": 276, "src": "3057:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 263, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3057:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "3045:22:0"}, "returnParameters": {"id": 268, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 267, "name": "", "nodeType": "VariableDeclaration", "overrides": null, "scope": 276, "src": "3091:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 266, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3091:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "3090:9:0"}, "scope": 343, "src": "3033:130:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 302, "nodeType": "Block", "src": "3733:243:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 290, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 288, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 280, "src": "3817:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 289, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3821:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "3817:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "id": 291, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 282, "src": "3824:12:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 287, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [361, 362], "referencedDeclaration": 362, "src": "3809:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 292, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3809:28:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 293, "nodeType": "ExpressionStatement", "src": "3809:28:0"}, {"assignments": [295], "declarations": [{"constant": false, "id": 295, "name": "c", "nodeType": "VariableDeclaration", "overrides": null, "scope": 302, "src": "3847:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 294, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3847:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "id": 299, "initialValue": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 298, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 296, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 278, "src": "3859:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"argumentTypes": null, "id": 297, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 280, "src": "3863:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3859:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3847:17:0"}, {"expression": {"argumentTypes": null, "id": 300, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 295, "src": "3968:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 286, "id": 301, "nodeType": "Return", "src": "3961:8:0"}]}, "documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.", "id": 303, "implemented": true, "kind": "function", "modifiers": [], "name": "div", "nodeType": "FunctionDefinition", "overrides": null, "parameters": {"id": 283, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 278, "name": "a", "nodeType": "VariableDeclaration", "overrides": null, "scope": 303, "src": "3651:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 277, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3651:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 280, "name": "b", "nodeType": "VariableDeclaration", "overrides": null, "scope": 303, "src": "3662:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 279, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3662:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 282, "name": "errorMessage", "nodeType": "VariableDeclaration", "overrides": null, "scope": 303, "src": "3673:26:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 281, "name": "string", "nodeType": "ElementaryTypeName", "src": "3673:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}], "src": "3650:50:0"}, "returnParameters": {"id": 286, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 285, "name": "", "nodeType": "VariableDeclaration", "overrides": null, "scope": 303, "src": "3724:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 284, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3724:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "3723:9:0"}, "scope": 343, "src": "3638:338:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 318, "nodeType": "Block", "src": "4487:61:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 313, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 305, "src": "4508:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"argumentTypes": null, "id": 314, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 307, "src": "4511:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"argumentTypes": null, "hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f", "id": 315, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4514:26:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832", "typeString": "literal_string \"SafeMath: modulo by zero\""}, "value": "SafeMath: modulo by zero"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832", "typeString": "literal_string \"SafeMath: modulo by zero\""}], "id": 312, "name": "mod", "nodeType": "Identifier", "overloadedDeclarations": [319, 342], "referencedDeclaration": 342, "src": "4504:3:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"}}, "id": 316, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4504:37:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 311, "id": 317, "nodeType": "Return", "src": "4497:44:0"}]}, "documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.", "id": 319, "implemented": true, "kind": "function", "modifiers": [], "name": "mod", "nodeType": "FunctionDefinition", "overrides": null, "parameters": {"id": 308, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 305, "name": "a", "nodeType": "VariableDeclaration", "overrides": null, "scope": 319, "src": "4433:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 304, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4433:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 307, "name": "b", "nodeType": "VariableDeclaration", "overrides": null, "scope": 319, "src": "4444:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 306, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4444:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "4432:22:0"}, "returnParameters": {"id": 311, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 310, "name": "", "nodeType": "VariableDeclaration", "overrides": null, "scope": 319, "src": "4478:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 309, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4478:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "4477:9:0"}, "scope": 343, "src": "4420:128:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 341, "nodeType": "Block", "src": "5107:68:0", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 333, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 331, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 323, "src": "5125:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 332, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5130:1:0", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "5125:6:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "id": 334, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 325, "src": "5133:12:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 330, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [361, 362], "referencedDeclaration": 362, "src": "5117:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 335, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5117:29:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 336, "nodeType": "ExpressionStatement", "src": "5117:29:0"}, {"expression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 339, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 337, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 321, "src": "5163:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"argumentTypes": null, "id": 338, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 323, "src": "5167:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5163:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 329, "id": 340, "nodeType": "Return", "src": "5156:12:0"}]}, "documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.", "id": 342, "implemented": true, "kind": "function", "modifiers": [], "name": "mod", "nodeType": "FunctionDefinition", "overrides": null, "parameters": {"id": 326, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 321, "name": "a", "nodeType": "VariableDeclaration", "overrides": null, "scope": 342, "src": "5025:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 320, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5025:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 323, "name": "b", "nodeType": "VariableDeclaration", "overrides": null, "scope": 342, "src": "5036:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 322, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5036:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}, {"constant": false, "id": 325, "name": "errorMessage", "nodeType": "VariableDeclaration", "overrides": null, "scope": 342, "src": "5047:26:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 324, "name": "string", "nodeType": "ElementaryTypeName", "src": "5047:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": null, "visibility": "internal"}], "src": "5024:50:0"}, "returnParameters": {"id": 329, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 328, "name": "", "nodeType": "VariableDeclaration", "overrides": null, "scope": 342, "src": "5098:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 327, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5098:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "5097:9:0"}, "scope": 343, "src": "5012:163:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}], "scope": 344, "src": "589:4588:0"}], "src": "0:5178:0"}}, "/code/ethernaut/01-fallback/Fallback.sol": {"AST": {"absolutePath": "Fallback.sol", "exportedSymbols": {"Fallback": [156]}, "id": 157, "nodeType": "SourceUnit", "nodes": [{"id": 30, "literals": ["solidity", "^", "0.6", ".0"], "nodeType": "PragmaDirective", "src": "32:23:1"}, {"absolutePath": "/code/@openzeppelin/contracts/math/SafeMath.sol", "file": "/code/@openzeppelin/contracts/math/SafeMath.sol", "id": 31, "nodeType": "ImportDirective", "scope": 157, "sourceUnit": 344, "src": "57:57:1", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "contractDependencies": [], "contractKind": "contract", "documentation": null, "fullyImplemented": true, "id": 156, "linearizedBaseContracts": [156], "name": "Fallback", "nodeType": "ContractDefinition", "nodes": [{"id": 34, "libraryName": {"contractScope": null, "id": 32, "name": "SafeMath", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 343, "src": "145:8:1", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeMath_$343", "typeString": "library SafeMath"}}, "nodeType": "UsingForDirective", "src": "139:27:1", "typeName": {"id": 33, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "158:7:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"constant": false, "functionSelector": "42e94c90", "id": 38, "name": "contributions", "nodeType": "VariableDeclaration", "overrides": null, "scope": 156, "src": "169:45:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 37, "keyType": {"id": 35, "name": "address", "nodeType": "ElementaryTypeName", "src": "177:7:1", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "169:24:1", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 36, "name": "uint", "nodeType": "ElementaryTypeName", "src": "188:4:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "value": null, "visibility": "public"}, {"constant": false, "functionSelector": "8da5cb5b", "id": 40, "name": "owner", "nodeType": "VariableDeclaration", "overrides": null, "scope": 156, "src": "218:28:1", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 39, "name": "address", "nodeType": "ElementaryTypeName", "src": "218:15:1", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "value": null, "visibility": "public"}, {"body": {"id": 58, "nodeType": "Block", "src": "272:79:1", "statements": [{"expression": {"argumentTypes": null, "id": 46, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 43, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 40, "src": "278:5:1", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 44, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 358, "src": "286:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 45, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "286:10:1", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "278:18:1", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 47, "nodeType": "ExpressionStatement", "src": "278:18:1"}, {"expression": {"argumentTypes": null, "id": 56, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 48, "name": "contributions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38, "src": "302:13:1", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 51, "indexExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 49, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 358, "src": "316:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 50, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "316:10:1", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "302:25:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_rational_1000000000000000000000_by_1", "typeString": "int_const 1000000000000000000000"}, "id": 55, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "hexValue": "31303030", "id": 52, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "330:4:1", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_1000_by_1", "typeString": "int_const 1000"}, "value": "1000"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"argumentTypes": null, "components": [{"argumentTypes": null, "hexValue": "31", "id": 53, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "338:7:1", "subdenomination": "ether", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "value": "1"}], "id": 54, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "337:9:1", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "330:16:1", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000000_by_1", "typeString": "int_const 1000000000000000000000"}}, "src": "302:44:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 57, "nodeType": "ExpressionStatement", "src": "302:44:1"}]}, "documentation": null, "id": 59, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "overrides": null, "parameters": {"id": 41, "nodeType": "ParameterList", "parameters": [], "src": "262:2:1"}, "returnParameters": {"id": 42, "nodeType": "ParameterList", "parameters": [], "src": "272:0:1"}, "scope": 156, "src": "251:100:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 70, "nodeType": "Block", "src": "374:117:1", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "id": 65, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 62, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 358, "src": "405:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 63, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "405:10:1", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "id": 64, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 40, "src": "419:5:1", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "405:19:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"argumentTypes": null, "hexValue": "63616c6c6572206973206e6f7420746865206f776e6572", "id": 66, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "438:25:1", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_stringliteral_98821890c044d63947a93cf48b7df1f5a42f89e719dd7abbb581002b013b02f4", "typeString": "literal_string \"caller is not the owner\""}, "value": "caller is not the owner"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_98821890c044d63947a93cf48b7df1f5a42f89e719dd7abbb581002b013b02f4", "typeString": "literal_string \"caller is not the owner\""}], "id": 61, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [361, 362], "referencedDeclaration": 362, "src": "384:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 67, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "384:89:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 68, "nodeType": "ExpressionStatement", "src": "384:89:1"}, {"id": 69, "nodeType": "PlaceholderStatement", "src": "483:1:1"}]}, "documentation": null, "id": 71, "name": "onlyOwner", "nodeType": "ModifierDefinition", "overrides": null, "parameters": {"id": 60, "nodeType": "ParameterList", "parameters": [], "src": "374:0:1"}, "src": "355:136:1", "virtual": false, "visibility": "internal"}, {"body": {"id": 104, "nodeType": "Block", "src": "532:178:1", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 78, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 75, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 358, "src": "546:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 76, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "546:9:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"argumentTypes": null, "hexValue": "302e303031", "id": 77, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "558:11:1", "subdenomination": "ether", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000_by_1", "typeString": "int_const 1000000000000000"}, "value": "0.001"}, "src": "546:23:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 74, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [361, 362], "referencedDeclaration": 361, "src": "538:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 79, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "538:32:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 80, "nodeType": "ExpressionStatement", "src": "538:32:1"}, {"expression": {"argumentTypes": null, "id": 87, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 81, "name": "contributions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38, "src": "576:13:1", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 84, "indexExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 82, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 358, "src": "590:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 83, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "590:10:1", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "576:25:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 85, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 358, "src": "605:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 86, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "605:9:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "576:38:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 88, "nodeType": "ExpressionStatement", "src": "576:38:1"}, {"condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 96, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 89, "name": "contributions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38, "src": "623:13:1", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 92, "indexExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 90, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 358, "src": "637:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 91, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "637:10:1", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "623:25:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 93, "name": "contributions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38, "src": "651:13:1", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 95, "indexExpression": {"argumentTypes": null, "id": 94, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 40, "src": "665:5:1", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "651:20:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "623:48:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": null, "id": 103, "nodeType": "IfStatement", "src": "620:86:1", "trueBody": {"id": 102, "nodeType": "Block", "src": "673:33:1", "statements": [{"expression": {"argumentTypes": null, "id": 100, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 97, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 40, "src": "681:5:1", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 98, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 358, "src": "689:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 99, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "689:10:1", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "681:18:1", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 101, "nodeType": "ExpressionStatement", "src": "681:18:1"}]}}]}, "documentation": null, "functionSelector": "d7bb99ba", "id": 105, "implemented": true, "kind": "function", "modifiers": [], "name": "contribute", "nodeType": "FunctionDefinition", "overrides": null, "parameters": {"id": 72, "nodeType": "ParameterList", "parameters": [], "src": "514:2:1"}, "returnParameters": {"id": 73, "nodeType": "ParameterList", "parameters": [], "src": "532:0:1"}, "scope": 156, "src": "495:215:1", "stateMutability": "payable", "virtual": false, "visibility": "public"}, {"body": {"id": 115, "nodeType": "Block", "src": "768:43:1", "statements": [{"expression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 110, "name": "contributions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38, "src": "781:13:1", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 113, "indexExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 111, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 358, "src": "795:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 112, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "795:10:1", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "781:25:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 109, "id": 114, "nodeType": "Return", "src": "774:32:1"}]}, "documentation": null, "functionSelector": "f10fdf5c", "id": 116, "implemented": true, "kind": "function", "modifiers": [], "name": "getContribution", "nodeType": "FunctionDefinition", "overrides": null, "parameters": {"id": 106, "nodeType": "ParameterList", "parameters": [], "src": "738:2:1"}, "returnParameters": {"id": 109, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 108, "name": "", "nodeType": "VariableDeclaration", "overrides": null, "scope": 116, "src": "762:4:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 107, "name": "uint", "nodeType": "ElementaryTypeName", "src": "762:4:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": null, "visibility": "internal"}], "src": "761:6:1"}, "scope": 156, "src": "714:97:1", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 131, "nodeType": "Block", "src": "852:48:1", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 126, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 374, "src": "881:4:1", "typeDescriptions": {"typeIdentifier": "t_contract$_Fallback_$156", "typeString": "contract Fallback"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_Fallback_$156", "typeString": "contract Fallback"}], "id": 125, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "873:7:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 124, "name": "address", "nodeType": "ElementaryTypeName", "src": "873:7:1", "typeDescriptions": {"typeIdentifier": null, "typeString": null}}}, "id": 127, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "873:13:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 128, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "873:21:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"argumentTypes": null, "id": 121, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 40, "src": "858:5:1", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 123, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "858:14:1", "typeDescriptions": {"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 129, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "858:37:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 130, "nodeType": "ExpressionStatement", "src": "858:37:1"}]}, "documentation": null, "functionSelector": "3ccfd60b", "id": 132, "implemented": true, "kind": "function", "modifiers": [{"arguments": null, "id": 119, "modifierName": {"argumentTypes": null, "id": 118, "name": "onlyOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 71, "src": "842:9:1", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "842:9:1"}], "name": "withdraw", "nodeType": "FunctionDefinition", "overrides": null, "parameters": {"id": 117, "nodeType": "ParameterList", "parameters": [], "src": "832:2:1"}, "returnParameters": {"id": 120, "nodeType": "ParameterList", "parameters": [], "src": "852:0:1"}, "scope": 156, "src": "815:85:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 154, "nodeType": "Block", "src": "931:90:1", "statements": [{"expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 146, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 139, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 136, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 358, "src": "945:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 137, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "945:9:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 138, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "957:1:1", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "945:13:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 145, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "baseExpression": {"argumentTypes": null, "id": 140, "name": "contributions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38, "src": "962:13:1", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 143, "indexExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 141, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 358, "src": "976:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 142, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "976:10:1", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "962:25:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"argumentTypes": null, "hexValue": "30", "id": 144, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "990:1:1", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "962:29:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "945:46:1", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 135, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [361, 362], "referencedDeclaration": 361, "src": "937:7:1", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 147, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "937:55:1", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 148, "nodeType": "ExpressionStatement", "src": "937:55:1"}, {"expression": {"argumentTypes": null, "id": 152, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"argumentTypes": null, "id": 149, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 40, "src": "998:5:1", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 150, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 358, "src": "1006:3:1", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 151, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "1006:10:1", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "998:18:1", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 153, "nodeType": "ExpressionStatement", "src": "998:18:1"}]}, "documentation": null, "id": 155, "implemented": true, "kind": "receive", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "overrides": null, "parameters": {"id": 133, "nodeType": "ParameterList", "parameters": [], "src": "911:2:1"}, "returnParameters": {"id": 134, "nodeType": "ParameterList", "parameters": [], "src": "931:0:1"}, "scope": 156, "src": "904:117:1", "stateMutability": "payable", "virtual": false, "visibility": "external"}], "scope": 157, "src": "116:907:1"}], "src": "32:991:1"}}, "/code/ethernaut/01-fallback/Test.sol": {"AST": {"absolutePath": "Test.sol", "exportedSymbols": {"Test": [28]}, "id": 29, "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.6", ".0"], "nodeType": "PragmaDirective", "src": "32:23:2"}, {"absolutePath": "Fallback.sol", "file": "./Fallback.sol", "id": 2, "nodeType": "ImportDirective", "scope": 29, "sourceUnit": 157, "src": "57:24:2", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"arguments": null, "baseName": {"contractScope": null, "id": 3, "name": "Fallback", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 156, "src": "100:8:2", "typeDescriptions": {"typeIdentifier": "t_contract$_Fallback_$156", "typeString": "contract Fallback"}}, "id": 4, "nodeType": "InheritanceSpecifier", "src": "100:8:2"}], "contractDependencies": [156], "contractKind": "contract", "documentation": null, "fullyImplemented": true, "id": 28, "linearizedBaseContracts": [28, 156], "name": "Test", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 26, "nodeType": "Block", "src": "182:144:2", "statements": [{"condition": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "id": 12, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "id": 9, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 40, "src": "196:5:2", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "id": 10, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 358, "src": "205:3:2", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 11, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "205:10:2", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "196:19:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 24, "nodeType": "Block", "src": "284:36:2", "statements": [{"expression": {"argumentTypes": null, "hexValue": "74727565", "id": 22, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "305:4:2", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 8, "id": 23, "nodeType": "Return", "src": "298:11:2"}]}, "id": 25, "nodeType": "IfStatement", "src": "192:128:2", "trueBody": {"id": 21, "nodeType": "Block", "src": "217:61:2", "statements": [{"expression": {"argumentTypes": null, "commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 19, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"argumentTypes": null, "expression": {"argumentTypes": null, "arguments": [{"argumentTypes": null, "id": 15, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 376, "src": "246:4:2", "typeDescriptions": {"typeIdentifier": "t_contract$_Test_$28", "typeString": "contract Test"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_Test_$28", "typeString": "contract Test"}], "id": 14, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "238:7:2", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 13, "name": "address", "nodeType": "ElementaryTypeName", "src": "238:7:2", "typeDescriptions": {"typeIdentifier": null, "typeString": null}}}, "id": 16, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "238:13:2", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 17, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "referencedDeclaration": null, "src": "238:21:2", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"argumentTypes": null, "hexValue": "31303030", "id": 18, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "263:4:2", "subdenomination": null, "typeDescriptions": {"typeIdentifier": "t_rational_1000_by_1", "typeString": "int_const 1000"}, "value": "1000"}, "src": "238:29:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 8, "id": 20, "nodeType": "Return", "src": "231:36:2"}]}}]}, "documentation": null, "functionSelector": "80b26709", "id": 27, "implemented": true, "kind": "function", "modifiers": [], "name": "echidna_owner_and_drain_funds", "nodeType": "FunctionDefinition", "overrides": null, "parameters": {"id": 5, "nodeType": "ParameterList", "parameters": [], "src": "153:2:2"}, "returnParameters": {"id": 8, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 7, "name": "", "nodeType": "VariableDeclaration", "overrides": null, "scope": 27, "src": "176:4:2", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 6, "name": "bool", "nodeType": "ElementaryTypeName", "src": "176:4:2", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": null, "visibility": "internal"}], "src": "175:6:2"}, "scope": 28, "src": "115:211:2", "stateMutability": "view", "virtual": false, "visibility": "public"}], "scope": 29, "src": "83:245:2"}], "src": "32:296:2"}}}, "sourceList": ["/code/@openzeppelin/contracts/math/SafeMath.sol", "/code/ethernaut/01-fallback/Fallback.sol", "/code/ethernaut/01-fallback/Test.sol"], "contracts": {"/code/@openzeppelin/contracts/math/SafeMath.sol:SafeMath": {"srcmap": "589:4588:0:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24", "srcmap-runtime": "589:4588:0:-:0;;;;;;;;", "abi": "[]", "bin": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d94b91f1b047a7057601a368140b3fde0a5d4f0fa2367387d2b6f000f3a0c4f64736f6c63430006000033", "bin-runtime": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d94b91f1b047a7057601a368140b3fde0a5d4f0fa2367387d2b6f000f3a0c4f64736f6c63430006000033", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.", "title": null}}, "/code/ethernaut/01-fallback/Fallback.sol:Fallback": {"srcmap": "116:907:1:-:0;;;251:100;8:9:-1;5:2;;;30:1;27;20:12;5:2;251:100:1;286:10;278:5;;:18;;;;;;;;;;;;;;;;;;330:16;302:13;:25;316:10;302:25;;;;;;;;;;;;;;;:44;;;;116:907;;;;;;", "srcmap-runtime": "116:907:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;957:1;945:9;:13;:46;;;;;990:1;962:13;:25;976:10;962:25;;;;;;;;;;;;;;;;:29;945:46;937:55;;;;;;1006:10;998:5;;:18;;;;;;;;;;;;;;;;;;116:907;;;;;815:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;815:85:1;;;:::i;:::-;;169:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;169:45:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;169:45:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;218:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;218:28:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;495:215;;;:::i;:::-;;714:97;;8:9:-1;5:2;;;30:1;27;20:12;5:2;714:97:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;815:85;419:5;;;;;;;;;;;405:19;;:10;:19;;;384:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;858:5:::1;;;;;;;;;;;:14;;:37;873:21;858:37;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;858:37:1;815:85::o:0;169:45::-;;;;;;;;;;;;;;;;;:::o;218:28::-;;;;;;;;;;;;;:::o;495:215::-;558:11;546:9;:23;538:32;;;;;;605:9;576:13;:25;590:10;576:25;;;;;;;;;;;;;;;;:38;;;;;;;;;;;651:13;:20;665:5;;;;;;;;;;;651:20;;;;;;;;;;;;;;;;623:13;:25;637:10;623:25;;;;;;;;;;;;;;;;:48;620:86;;;689:10;681:5;;:18;;;;;;;;;;;;;;;;;;620:86;495:215::o;714:97::-;762:4;781:13;:25;795:10;781:25;;;;;;;;;;;;;;;;774:32;;714:97;:::o", "abi": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"contribute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "bin": "608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550683635c9adc5dea000006000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061052b806100ad6000396000f3fe60806040526004361061004e5760003560e01c80633ccfd60b146100f257806342e94c90146101095780638da5cb5b1461016e578063d7bb99ba146101c5578063f10fdf5c146101cf576100ed565b366100ed576000341180156100a1575060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b6100aa57600080fd5b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550005b600080fd5b3480156100fe57600080fd5b506101076101fa565b005b34801561011557600080fd5b506101586004803603602081101561012c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610328565b6040518082815260200191505060405180910390f35b34801561017a57600080fd5b50610183610340565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101cd610366565b005b3480156101db57600080fd5b506101e46104af565b6040518082815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f63616c6c6572206973206e6f7420746865206f776e657200000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610325573d6000803e3d6000fd5b50565b60006020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b66038d7ea4c68000341061037957600080fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156104ad5733600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509056fea26469706673582212201e88e26131ae5b5cd46f8b3ef3f2f0a632120f9576e5e5d21eeefa97955b9d0964736f6c63430006000033", "bin-runtime": "60806040526004361061004e5760003560e01c80633ccfd60b146100f257806342e94c90146101095780638da5cb5b1461016e578063d7bb99ba146101c5578063f10fdf5c146101cf576100ed565b366100ed576000341180156100a1575060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b6100aa57600080fd5b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550005b600080fd5b3480156100fe57600080fd5b506101076101fa565b005b34801561011557600080fd5b506101586004803603602081101561012c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610328565b6040518082815260200191505060405180910390f35b34801561017a57600080fd5b50610183610340565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101cd610366565b005b3480156101db57600080fd5b506101e46104af565b6040518082815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f63616c6c6572206973206e6f7420746865206f776e657200000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610325573d6000803e3d6000fd5b50565b60006020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b66038d7ea4c68000341061037957600080fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156104ad5733600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509056fea26469706673582212201e88e26131ae5b5cd46f8b3ef3f2f0a632120f9576e5e5d21eeefa97955b9d0964736f6c63430006000033", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": null, "title": null}}, "/code/ethernaut/01-fallback/Test.sol:Test": {"srcmap": "83:245:2:-:0;;;286:10:1;278:5;;:18;;;;;;;;;;;;;;;;;;330:16;302:13;:25;316:10;302:25;;;;;;;;;;;;;;;:44;;;;83:245:2;;;;;;", "srcmap-runtime": "83:245:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;957:1:1;945:9;:13;:46;;;;;990:1;962:13;:25;976:10;962:25;;;;;;;;;;;;;;;;:29;945:46;937:55;;;;;;1006:10;998:5;;:18;;;;;;;;;;;;;;;;;;83:245:2;;;;;815:85:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;815:85:1;;;:::i;:::-;;169:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;169:45:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;169:45:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;115:211:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;115:211:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;218:28:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;218:28:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;495:215;;;:::i;:::-;;714:97;;8:9:-1;5:2;;;30:1;27;20:12;5:2;714:97:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;815:85;419:5;;;;;;;;;;;405:19;;:10;:19;;;384:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;858:5:::1;;;;;;;;;;;:14;;:37;873:21;858:37;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;858:37:1;815:85::o:0;169:45::-;;;;;;;;;;;;;;;;;:::o;115:211:2:-;176:4;205:10;196:19;;:5;;;;;;;;;;;:19;;;192:128;;;263:4;238:21;:29;;231:36;;;;192:128;305:4;298:11;;115:211;;:::o;218:28:1:-;;;;;;;;;;;;;:::o;495:215::-;558:11;546:9;:23;538:32;;;;;;605:9;576:13;:25;590:10;576:25;;;;;;;;;;;;;;;;:38;;;;;;;;;;;651:13;:20;665:5;;;;;;;;;;;651:20;;;;;;;;;;;;;;;;623:13;:25;637:10;623:25;;;;;;;;;;;;;;;;:48;620:86;;;689:10;681:5;;:18;;;;;;;;;;;;;;;;;;620:86;495:215::o;714:97::-;762:4;781:13;:25;795:10;781:25;;;;;;;;;;;;;;;;774:32;;714:97;:::o", "abi": "[{\"inputs\":[],\"name\":\"contribute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"echidna_owner_and_drain_funds\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "bin": "608060405233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550683635c9adc5dea000006000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506105d2806100a06000396000f3fe6080604052600436106100595760003560e01c80633ccfd60b146100fd57806342e94c901461011457806380b26709146101795780638da5cb5b146101a8578063d7bb99ba146101ff578063f10fdf5c14610209576100f8565b366100f8576000341180156100ac575060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b6100b557600080fd5b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550005b600080fd5b34801561010957600080fd5b50610112610234565b005b34801561012057600080fd5b506101636004803603602081101561013757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610362565b6040518082815260200191505060405180910390f35b34801561018557600080fd5b5061018e61037a565b604051808215151515815260200191505060405180910390f35b3480156101b457600080fd5b506101bd6103e7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61020761040d565b005b34801561021557600080fd5b5061021e610556565b6040518082815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f63616c6c6572206973206e6f7420746865206f776e657200000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561035f573d6000803e3d6000fd5b50565b60006020528060005260406000206000915090505481565b60003373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103df576103e847101590506103e4565b600190505b90565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b66038d7ea4c68000341061042057600080fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156105545733600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509056fea2646970667358221220af0be4993f932de9c6beaea8fa49cbaea8375531a939b8e4e4b297c98abe51e964736f6c63430006000033", "bin-runtime": "6080604052600436106100595760003560e01c80633ccfd60b146100fd57806342e94c901461011457806380b26709146101795780638da5cb5b146101a8578063d7bb99ba146101ff578063f10fdf5c14610209576100f8565b366100f8576000341180156100ac575060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b6100b557600080fd5b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550005b600080fd5b34801561010957600080fd5b50610112610234565b005b34801561012057600080fd5b506101636004803603602081101561013757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610362565b6040518082815260200191505060405180910390f35b34801561018557600080fd5b5061018e61037a565b604051808215151515815260200191505060405180910390f35b3480156101b457600080fd5b506101bd6103e7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61020761040d565b005b34801561021557600080fd5b5061021e610556565b6040518082815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f63616c6c6572206973206e6f7420746865206f776e657200000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561035f573d6000803e3d6000fd5b50565b60006020528060005260406000206000915090505481565b60003373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103df576103e847101590506103e4565b600190505b90565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b66038d7ea4c68000341061042057600080fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156105545733600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509056fea2646970667358221220af0be4993f932de9c6beaea8fa49cbaea8375531a939b8e4e4b297c98abe51e964736f6c63430006000033", "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": null, "title": null}}}}